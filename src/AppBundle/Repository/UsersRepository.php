<?php

namespace AppBundle\Repository;

/**
 * UsersRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UsersRepository extends \Doctrine\ORM\EntityRepository
{
    //select users.id, users.name, users.login, user_avatar.link_avatar, users.login,users.email FROM users, user_profile, user_avatar WHERE users.id=user_profile.user_id AND user_avatar.id=user_profile.avatar_id
    public function getAllUsers()
    {

        return $this->getEntityManager()
            ->createQuery(
                'SELECT users.id, users.name,user_avatar.linkAvatar, users.login, users.email 
                 FROM AppBundle:Users users,AppBundle:User_profile user_profile, AppBundle:User_avatar  user_avatar 
                 WHERE users.id=user_profile.users 
                 AND user_avatar.id=user_profile.user_avatar'
            )
            ->getResult();
    }
    //select users.id, users.name, users.login, users.email, users.password_hash,user_profile.bio,user_profile.address, user_profile.City,user_profile.Country, user_phones.phone_number,user_avatar.link_avatar FROM users, user_profile, user_avatar, user_phones WHERE users.id=user_profile.user_id AND user_profile.avatar_id=user_avatar.id AND user_profile.phone_id=user_phones.id AND users.id=2
    public function getUserFullInfoById($id)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT users.id, users.name,users.login, users.email, users.passwordHash, user_profile.bio, user_profile.address, user_profile.city,                            user_profile.country, user_avatar.linkAvatar, user_phones.phoneNumber 
                 FROM AppBundle:Users users,AppBundle:User_profile user_profile,AppBundle:User_avatar user_avatar, AppBundle:User_phones user_phones 
                 WHERE users.id=user_profile.users 
                 AND user_avatar.id=user_profile.user_avatar 
                 AND user_phones.id=user_profile.user_phone 
                 AND users.id=:id'
            )
            ->setParameter('id', $id)
            ->getResult();
    }

    public function reNameUserAvatarLink(array $array){
        foreach ($array as $key => $value) {
            foreach ($value as $item => $mainValue) {
                if($item == "linkAvatar"){
                    $result = substr($mainValue, 0, 6);
                    if ($result !== "http:/" && $result !== "https:") {
                        $array[$key][$item] = "/web/Resources/images/" . $mainValue;
                    }
                }
            }
        }
        return $array;
    }

}
